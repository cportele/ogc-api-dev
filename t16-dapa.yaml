openapi: 3.0.3
info:
  title: NOAA Global Historical Climatology Network Daily (GHCN-D)
  description: 'Global Historical Climatology Network - Daily is a dataset from NOAA that contains daily observations over global land areas. It contains station-based measurements from land-based stations worldwide, about two thirds of which are for precipitation measurement only. Other meteorological elements include, but are not limited to, daily maximum and minimum temperature, temperature at the time of observation, snowfall and snow depth. It is a composite of climate records from numerous sources that were merged together and subjected to a common suite of quality assurance reviews. Some data are more than 175 years old.'
  contact:
    name: '<a href="https://www.interactive-instruments.de/">interactive instruments</a> for <a href="https://www.ogc.org/projects/initiatives/t-16">OGC Testbed-16</a>'
  license:
    name: 'GHCN-Daily, see "Special Note"'
    url: 'https://www.ncdc.noaa.gov/ghcnd-data-access'
  version: "0.0.2"
servers:
- url: 'http://t16.ldproxy.net/ghcnd'
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page
      description: 'The landing page provides links to the API definition (link relations `service-desc` and `service-doc`), the Conformance declaration (path `/conformance`, link relation `conformance`), and other resources in the API.'
      parameters:
        - $ref: '#/components/parameters/fCommon'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /conformance:
    get:
      tags:
        - Capabilities
      summary: conformance declaration
      description: 'The URIs of all conformance classes supported by the server. This information is provided to support ''generic'' clients that want to access multiple OGC API implementations - and not ''just'' a specific API. For clients accessing only a single API, this information is in general not relevant and the OpenAPI definition details the required information about the API.'
      parameters:
        - $ref: '#/components/parameters/fCommon'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConformanceDeclaration'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections:
    get:
      tags:
        - Data collections
      summary: feature collections in the dataset 'NOAA Global Historical Climatology Network Daily (GHCN-D)'
      description: |-
        The dataset is organized in feature collections. This resource provides information about and access to the feature collections.
        The response contains the list of collections. For each collection, a link to the items in the collection (path `/collections/{collectionId}/items`, link relation `items`) as well as key information about the collection.
        This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      parameters:
        - $ref: '#/components/parameters/fCollections'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collections'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation:
    get:
      tags:
        - Data collections
      summary: feature collection 'Observations'
      description: |-
        Information about the feature collection with id 'observation'. The response contains a link to the items in the collection (path `/collections/{collectionId}/items`,link relation `items`) as well as key information about the collection. This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      parameters:
        - $ref: '#/components/parameters/fCollections'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/station:
    get:
      tags:
        - Data collections
      summary: feature collection 'Stations'
      description: |-
        Information about the feature collection with id 'station'. The response contains a link to the items in the collection (path `/collections/{collectionId}/items`,link relation `items`) as well as key information about the collection. This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      parameters:
        - $ref: '#/components/parameters/fCollections'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation/items:
    get:
      tags:
        - Data
      summary: retrieve features in the feature collection 'observation'
      description: 'The response is a document consisting of features in the collection. The features included in the response are determined by the server based on the query parameters of the request. To support access to larger collections without overloading the client, the API supports paged access with links to the next page, if more features are selected that the page size. The `bbox` and `datetime` parameter can be used to select only a subset of the features in the collection (the features that are in the bounding box or time interval). The `bbox` parameter matches all features in the collection that are not associated with a location, too. The `datetime` parameter matches all features in the collection that are not associated with a time stamp or interval, too. The `limit` parameter may be used to control the subset of the selected features that should be returned in the response, the page size. Each page may include information about the number of selected and returned features (`numberMatched` and `numberReturned`) as well as links to support paging (link relation `next`).'
      parameters:
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/crsFeatures_observation'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/offsetFeatures'
        - $ref: '#/components/parameters/propertiesFeatures_observation'
        - $ref: '#/components/parameters/bbox-crsFeatures_observation'
        - $ref: '#/components/parameters/limitFeatures'
        - $ref: '#/components/parameters/fFeatures'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/filter-lang'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJson_observation'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/observation/items/{featureId}':
    get:
      tags:
        - Data
      summary: retrieve a feature in the feature collection 'observation'
      description: 'Fetch the feature with id `{featureId}`.'
      parameters:
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/crsFeatures_observation'
        - $ref: '#/components/parameters/propertiesFeatures_observation'
        - $ref: '#/components/parameters/fFeatures'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureGeoJson_observation'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '404':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/station/items:
    get:
      tags:
        - Data
      summary: retrieve features in the feature collection 'station'
      description: 'The response is a document consisting of features in the collection. The features included in the response are determined by the server based on the query parameters of the request. To support access to larger collections without overloading the client, the API supports paged access with links to the next page, if more features are selected that the page size. The `bbox` and `datetime` parameter can be used to select only a subset of the features in the collection (the features that are in the bounding box or time interval). The `bbox` parameter matches all features in the collection that are not associated with a location, too. The `datetime` parameter matches all features in the collection that are not associated with a time stamp or interval, too. The `limit` parameter may be used to control the subset of the selected features that should be returned in the response, the page size. Each page may include information about the number of selected and returned features (`numberMatched` and `numberReturned`) as well as links to support paging (link relation `next`).'
      parameters:
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/crsFeatures_station'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/offsetFeatures'
        - $ref: '#/components/parameters/propertiesFeatures_station'
        - $ref: '#/components/parameters/bbox-crsFeatures_station'
        - $ref: '#/components/parameters/limitFeatures'
        - $ref: '#/components/parameters/fFeatures'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/filter-lang'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJson_station'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/station/items/{featureId}':
    get:
      tags:
        - Data
      summary: retrieve a feature in the feature collection 'station'
      description: 'Fetch the feature with id `{featureId}`.'
      parameters:
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/crsFeatures_station'
        - $ref: '#/components/parameters/propertiesFeatures_station'
        - $ref: '#/components/parameters/fFeatures'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureGeoJson_station'
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '404':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation/dapa:
    get:
      tags:
        - DAPA
      summary: list the available data retrieval patterns
      parameters:
        - $ref: '#/components/parameters/fProcessing'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dapa'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation/dapa/variables:
    get:
      tags:
        - DAPA
      summary: fetch the observable properties included in this observation collection
      parameters:
        - $ref: '#/components/parameters/fVariables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variables'
              example:
                variables:
                  - id: PRCP
                    title: Precipitation
                    uom: 0.1 mm
                  - id: SNOW
                    title: Snowfall
                    uom: mm
                  - id: SNWD
                    title: Snow depth
                    uom: mm
            text/html:
              schema:
                $ref: '#/components/schemas/htmlSchema'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation/dapa/area:
    get:
      tags:
        - DAPA
      summary: retrieve information about observations in an area
      description: 'A collection of point features, one for each location in the selected area (`coord` or `bbox`), at the selected time or for each time step in the selected time interval (`datetime`). The time steps are determined from the information in the original data. The feature contains a property for each selected variable (`variables`) for which an observation is available.'
      parameters:
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/coordArea'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/variables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/observation/dapa/area:aggregate-space':
    get:
      tags:
        - DAPA
      summary: retrieve information about observations in an area and compute values aggregated over space
      description: A feature with the (multi-)polygon geometry of the selected area (`coord` or `bbox`) at the selected time or for each time step in the selected time interval (`datetime`). The time steps are determined from the information in the original data. Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to all observed values in the area for each time step.
      parameters:
        - $ref: '#/components/parameters/functions'
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/coordArea'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/variables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/observation/dapa/area:aggregate-space-time':
    get:
      tags:
        - DAPA
      summary: retrieve information about observations in an area and compute values aggregated over space and time
      description: A feature with the (multi-)polygon geometry of the selected area (`coord` or `bbox`). Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to all observed values in the area over all time steps.
      parameters:
        - $ref: '#/components/parameters/functions'
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/coordArea'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/variables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/observation/dapa/area:aggregate-time':
    get:
      tags:
        - DAPA
      summary: retrieve information about observations in an area and compute values aggregated over time
      description: 'A collection of point features, one for each location in the selected area (`coord` or `bbox`). Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to the observed values at the location for each time step in the selected time interval (`datetime`).'
      parameters:
        - $ref: '#/components/parameters/functions'
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/coordArea'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/variables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation/dapa/position:
    get:
      tags:
        - DAPA
      summary: retrieve information about observations at a position
      description: A point observation feature with a point geometry at the selected location (`coord`) at the selected time or for each time step in the selected time interval (`datetime`). The feature contains a property for each selected variable (`variables`) for which a value can be interpolated. The time steps are determined from the information in the original data.
      parameters:
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/coordPosition'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/variables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/observation/dapa/position:aggregate-time':
    get:
      tags:
        - DAPA
      summary: retrieve information about observations at a position and compute values aggregated over time
      description: A point observation feature with a point geometry at the selected location (`coord`). The feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to the interpolated values for each time step in the selected time interval (`datetime`).
      parameters:
        - $ref: '#/components/parameters/functions'
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/coordPosition'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/variables'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  /collections/observation/dapa/resample-to-grid:
    get:
      tags:
        - DAPA
      summary: 'retrieve information about observations in an area, resampled to a regular grid'
      description: 'A collection of point features in a rectangular area (`bbox`), at the selected time or for each time step in the selected time interval (`datetime`). The time steps are determined from the information in the original data. The result of the parent resource is taken and resampled to a grid and each point feature represents a cell of the grid. The grid size is determined by the parameters `width` and `height`. If only `width` is provided, the value of `height` is derived from the area.Each feature contains a property for each selected variable (`variables`) for which a value can be interpolated.'
      parameters:
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/coordArea'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/variables'
        - $ref: '#/components/parameters/height'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
  '/collections/observation/dapa/resample-to-grid:aggregate-time':
    get:
      tags:
        - DAPA
      summary: 'retrieve information about observations in an area, resampled to a regular grid and aggregated over time'
      description: 'A collection of point features in a rectangular area (`bbox`). The result of the parent resource is taken and resampled to a grid and each point feature represents a cell of the grid. The grid size is determined by the parameters `width` and `height`. If only `width` is provided, the value of `height` is derived from the area.Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to the interpolated values for each time step in the selected time interval (`datetime`).'
      parameters:
        - $ref: '#/components/parameters/functions'
        - $ref: '#/components/parameters/datetimeClosed'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/fProcesses'
        - $ref: '#/components/parameters/coordArea'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/variables'
        - $ref: '#/components/parameters/height'
      responses:
        '200':
          description: The operation was executed successfully.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureCollectionGeoJSON'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotAcceptable'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'
components:
  schemas:
    LandingPage:
      type: object
      properties:
        extent:
          type: object
          properties:
            spatial:
              required:
                - bbox
                - crs
              type: object
              properties:
                bbox:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                crs:
                  type: string
            temporal:
              required:
                - interval
                - trs
              type: object
              properties:
                trs:
                  type: string
                interval:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
        links:
          type: array
          items:
            required:
              - href
            type: object
            properties:
              title:
                type: string
              rel:
                type: string
              href:
                type: string
              hreflang:
                type: string
              templated:
                type: boolean
              length:
                type: integer
                format: int32
              type:
                type: string
        description:
          type: string
        title:
          type: string
    htmlSchema:
      type: string
      example: <html>...</html>
    ConformanceDeclaration:
      type: object
      properties:
        conformsTo:
          type: array
          items:
            type: string
        links:
          type: array
          items:
            required:
              - href
            type: object
            properties:
              title:
                type: string
              rel:
                type: string
              href:
                type: string
              hreflang:
                type: string
              templated:
                type: boolean
              length:
                type: integer
                format: int32
              type:
                type: string
        description:
          type: string
        title:
          type: string
    Collections:
      type: object
      properties:
        crs:
          type: array
          items:
            type: string
        collections:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              styles:
                type: array
                items:
                  required:
                    - id
                  type: object
                  properties:
                    id:
                      type: string
                    links:
                      type: array
                      items:
                        required:
                          - href
                        type: object
                        properties:
                          title:
                            type: string
                          rel:
                            type: string
                          href:
                            type: string
                          hreflang:
                            type: string
                          templated:
                            type: boolean
                          length:
                            type: integer
                            format: int32
                          type:
                            type: string
                    description:
                      type: string
                    title:
                      type: string
              extent:
                type: object
                properties:
                  spatial:
                    required:
                      - bbox
                      - crs
                    type: object
                    properties:
                      bbox:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                      crs:
                        type: string
                  temporal:
                    required:
                      - interval
                      - trs
                    type: object
                    properties:
                      trs:
                        type: string
                      interval:
                        type: array
                        items:
                          type: array
                          items:
                            type: string
              storageCrs:
                type: string
              crs:
                type: array
                items:
                  type: string
              itemType:
                type: string
              defaultStyle:
                type: string
              id:
                type: string
              links:
                type: array
                items:
                  required:
                    - href
                  type: object
                  properties:
                    title:
                      type: string
                    rel:
                      type: string
                    href:
                      type: string
                    hreflang:
                      type: string
                    templated:
                      type: boolean
                    length:
                      type: integer
                      format: int32
                    type:
                      type: string
              description:
                type: string
              title:
                type: string
        links:
          type: array
          items:
            required:
              - href
            type: object
            properties:
              title:
                type: string
              rel:
                type: string
              href:
                type: string
              hreflang:
                type: string
              templated:
                type: boolean
              length:
                type: integer
                format: int32
              type:
                type: string
        description:
          type: string
        title:
          type: string
    Collection:
      required:
        - id
      type: object
      properties:
        styles:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
              links:
                type: array
                items:
                  required:
                    - href
                  type: object
                  properties:
                    title:
                      type: string
                    rel:
                      type: string
                    href:
                      type: string
                    hreflang:
                      type: string
                    templated:
                      type: boolean
                    length:
                      type: integer
                      format: int32
                    type:
                      type: string
              description:
                type: string
              title:
                type: string
        extent:
          type: object
          properties:
            spatial:
              required:
                - bbox
                - crs
              type: object
              properties:
                bbox:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                crs:
                  type: string
            temporal:
              required:
                - interval
                - trs
              type: object
              properties:
                trs:
                  type: string
                interval:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
        storageCrs:
          type: string
        crs:
          type: array
          items:
            type: string
        itemType:
          type: string
        defaultStyle:
          type: string
        id:
          type: string
        links:
          type: array
          items:
            required:
              - href
            type: object
            properties:
              title:
                type: string
              rel:
                type: string
              href:
                type: string
              hreflang:
                type: string
              templated:
                type: boolean
              length:
                type: integer
                format: int32
              type:
                type: string
        description:
          type: string
        title:
          type: string
    featureCollectionGeoJson_observation:
      required:
        - type
        - features
      type: object
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJson_observation'
        links:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links'
        timestamp:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timestamp'
        numberMatched:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched'
        numberReturned:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned'
    featureGeoJson_observation:
      title: Observations
      required:
        - type
        - geometry
        - properties
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          properties:
            id:
              type: integer
            phenomenonTime:
              type: string
              format: date-time
            observedProperty:
              type: string
            unitOfMeasurement:
              type: string
            result:
              type: integer
            locationCode:
              type: string
            locationName:
              type: string
            locationLink:
              type: string
        id:
          type: string
        links:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links'
      description: 'Daily observations from land-based stations worldwide. The archive includes the following meteorological elements: daily maximum temperature, daily minimum temperature, temperature at the time of observation, precipitation (i.e., rain, melted snow), snowfall, snow depth, other elements where available.'
    featureCollectionGeoJson_station:
      required:
        - type
        - features
      type: object
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJson_station'
        links:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links'
        timestamp:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timestamp'
        numberMatched:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched'
        numberReturned:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned'
    featureGeoJson_station:
      title: Stations
      required:
        - type
        - geometry
        - properties
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            elevation:
              type: number
            wmoId:
              type: string
            observations:
              type: string
        id:
          type: string
        links:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links'
      description: The land-based stations contributing to the GHCN-Daily observation dataset.
    dapa:
      type: object
      properties:
        processes:
          type: array
          items:
            required:
              - inputCollectionId
              - processDescriptionUri
            type: object
            properties:
              inputCollectionId:
                type: string
              processDescriptionUri:
                type: string
              links:
                type: array
                items:
                  required:
                    - href
                  type: object
                  properties:
                    title:
                      type: string
                    rel:
                      type: string
                    href:
                      type: string
                    hreflang:
                      type: string
                    templated:
                      type: boolean
                    length:
                      type: integer
                      format: int32
                    type:
                      type: string
              description:
                type: string
              title:
                type: string
        links:
          type: array
          items:
            required:
              - href
            type: object
            properties:
              title:
                type: string
              rel:
                type: string
              href:
                type: string
              hreflang:
                type: string
              templated:
                type: boolean
              length:
                type: integer
                format: int32
              type:
                type: string
        description:
          type: string
        title:
          type: string
    Variables:
      type: object
      properties:
        variables:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              description:
                type: string
              title:
                type: string
              uom:
                type: string
              id:
                type: string
        links:
          type: array
          items:
            required:
              - href
            type: object
            properties:
              title:
                type: string
              rel:
                type: string
              href:
                type: string
              hreflang:
                type: string
              templated:
                type: boolean
              length:
                type: integer
                format: int32
              type:
                type: string
        description:
          type: string
        title:
          type: string
  parameters:
    fCommon:
      name: f
      in: query
      description: 'The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - json
          - html
    fCollections:
      name: f
      in: query
      description: 'The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - json
          - html
    datetime:
      name: datetime
      in: query
      description: |-
        Either a local date, a date-time with offsets or an open or closed interval. Date and time expressions adhere to RFC 3339. 
        Examples:

        * A date-time: '2018-02-12T23:20:50Z'
        * A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'
        * Open intervals: '2018-02-12T00:00:00Z/..' or '../2018-03-18T12:31:12Z'

        Selects features that have a temporal property that intersects the value of the parameter.
      required: false
      style: form
      explode: false
      schema:
        pattern: '^(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\.\.)?)/(?:(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\.\.)?)$|^(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\.[0-9]+)?(Z|(\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\.[0-9]+)?(Z|(\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\.\.)?)/(?:(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\.[0-9]+)?(Z|(\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\.\.)?)$'
        type: string
    crsFeatures_observation:
      name: crs
      in: query
      description: 'The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          - 'http://www.opengis.net/def/crs/EPSG/0/4326'
          - 'http://www.opengis.net/def/crs/EPSG/0/3857'
          - 'http://www.opengis.net/def/crs/EPSG/0/4087'
        default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1 
        * Lower left corner, coordinate axis 2 
        * Minimum value, coordinate axis 3 (optional) 
        * Upper right corner, coordinate axis 1 
        * Upper right corner, coordinate axis 2 
        * Maximum value, coordinate axis 3 (optional) 

        The coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. 
        If a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.
      required: false
      style: form
      explode: false
      schema:
        maxItems: 4
        minItems: 4
        type: array
        items:
          type: number
          format: double
    offsetFeatures:
      name: offset
      in: query
      description: The optional offset parameter identifies the index of the first feature in the response in the overall result set.
      required: false
      style: form
      explode: false
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    propertiesFeatures_observation:
      name: properties
      in: query
      description: The properties that should be included for each feature. The parameter value is a comma-separated list of property names.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - id
            - phenomenonTime
            - observedProperty
            - unitOfMeasurement
            - result
            - locationCode
            - locationName
            - locationLink
    bbox-crsFeatures_observation:
      name: bbox-crs
      in: query
      description: 'The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          - 'http://www.opengis.net/def/crs/EPSG/0/4326'
          - 'http://www.opengis.net/def/crs/EPSG/0/3857'
          - 'http://www.opengis.net/def/crs/EPSG/0/4087'
        default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    limitFeatures:
      name: limit
      in: query
      description: The optional limit parameter limits the number of items that are presented in the response document. Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.
      required: false
      style: form
      explode: false
      schema:
        maximum: 10000
        minimum: 1
        type: integer
        format: int32
        default: 10
    fFeatures:
      name: f
      in: query
      description: 'The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - html
          - json
    featureId:
      name: featureId
      in: path
      description: 'The local identifier of a feature, unique within the feature collection.'
      required: true
      schema:
        pattern: '[\w\-]+'
        type: string
    crsFeatures_station:
      name: crs
      in: query
      description: 'The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          - 'http://www.opengis.net/def/crs/EPSG/0/4326'
          - 'http://www.opengis.net/def/crs/EPSG/0/3857'
          - 'http://www.opengis.net/def/crs/EPSG/0/4087'
        default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    propertiesFeatures_station:
      name: properties
      in: query
      description: The properties that should be included for each feature. The parameter value is a comma-separated list of property names.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - id
            - name
            - elevation
            - wmoId
            - observations
    bbox-crsFeatures_station:
      name: bbox-crs
      in: query
      description: 'The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          - 'http://www.opengis.net/def/crs/EPSG/0/4326'
          - 'http://www.opengis.net/def/crs/EPSG/0/3857'
          - 'http://www.opengis.net/def/crs/EPSG/0/4087'
        default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    fProcessing:
      name: f
      in: query
      description: 'The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - json
    fVariables:
      name: f
      in: query
      description: 'The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - json
          - html
    datetimeClosed:
      name: datetime
      in: query
      description: |-
        Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. 
        Examples:

        * A date-time: '2018-02-12T23:20:50Z'
        * A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'

        Selects features that have a temporal property that intersects the value of the parameter.
      required: false
      style: form
      explode: false
      schema:
        pattern: '^(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\.[0-9]+)?(Z|(\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\.[0-9]+)?(Z|(\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\.[0-9]+)?(Z|(\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$'
        type: string
        default: 2019-08-07/2019-08-11
    fProcesses:
      name: f
      in: query
      description: 'The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.'
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - json
    coordArea:
      name: coord
      in: query
      description: 'A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.'
      required: false
      style: form
      explode: false
      schema:
        pattern: '^\s*MULTIPOLYGON\s*\(\s*(\(\s*\(\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+(?:\s*\,\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+\s*)+\)\s*(?:\s*\,\s*\(\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+(?:\s*\,\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+\s*)+\)\s*)*\))\s*(?:\s*\,\s*(\(\s*\(\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+(?:\s*\,\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+\s*)+\)\s*(?:\s*\,\s*\(\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+(?:\s*\,\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+\s*)+\)\s*)*\))\s*)*\)\s*$|^\s*POLYGON\s*\(\s*(\(\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+(?:\s*\,\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+\s*)+\))\s*(?:\s*\,\s*(\(\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+(?:\s*\,\s*[+-]?\d+\.?\d*(?:\s+[+-]?\d+\.?\d*)+\s*)+\))\s*)*\)\s*$'
        type: string
    variables:
      name: variables
      in: query
      description: |-
        A comma-separated list of values with names of observable properties that should be returned in the response.

        More information about the available properties can be retrieved from the `../variables` path.

        The default is to return all observed properties.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - PRCP
            - SNOW
            - SNWD
            - TMAX
            - TMIN
            - TAVG
    functions:
      name: functions
      in: query
      description: The statistical function(s) to apply when aggregating multiple values to a single value.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - min
            - count
            - max
            - std-dev
            - sum
            - mean
        default:
          - min
          - count
          - max
          - mean
    coordPosition:
      name: coord
      in: query
      description: 'A Well Known Text representation of a POINT or POINTZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.'
      required: false
      style: form
      explode: false
      schema:
        pattern: '^\s*POINT\s*\(\s*([+-]?\d+\.?\d*)(?:\s+([+-]?\d+\.?\d*))+\s*\)\s*$'
        type: string
        default: POINT(6.9299617 50.000008)
    width:
      name: width
      in: query
      description: The number of grid cells in the horizontal direction.
      required: false
      style: form
      explode: false
      schema:
        type: number
        default: 10
    height:
      name: height
      in: query
      description: The number of grid cells in the vertical direction.
      required: false
      style: form
      explode: false
      schema:
        type: number
    filter:
      name: filter
      in: query
      description: Filter features in the collection using the query expression in the parameter value.
      required: false
      style: form
      explode: false
      schema:
        type: string
    filter-lang:
      name: filter-lang
      in: query
      description: Language of the query expression in the 'filter' parameter.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - cql-text
          - cql-json
        default: cql-text